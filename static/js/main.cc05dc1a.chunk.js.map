{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","role","placeholder","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","onClick","newText","toUpperCase","toLowerCase","split","reverse","join","length","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cc05dc1a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg bg-light\">\r\n    <div className=\"container-fluid\">\r\n      {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link\" to=\"/about\">{props.about}</Link> */}\r\n            <a className=\"nav-link\" href=\"/about\">{props.about}</a>\r\n\r\n          </li>\r\n         \r\n        </ul>\r\n        <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {title:PropTypes.string,\r\n                    about:PropTypes.string}","import React, {useState} from 'react'\r\n\r\nexport default function(props) {\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n        const handleLoClick=()=>{\r\n            // console.log(\"Lowercase was clicked\" + text);\r\n            let newText = text.toLowerCase();\r\n            setText(newText);\r\n\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleClearClick=()=>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n    }\r\n    const handleRevClick=()=>{\r\n        let newText = text.split(\"\").reverse().join(\"\");\r\n        setText(newText);\r\n\r\n}\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h3>{props.heading}</h3>\r\n            <div className=\"mb-3\">\r\n                {/* <label for=\"myText\" class=\"form-label\">Example textarea</label> */}\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myText\" rows=\"10\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-pyimary MX-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button className=\"btn btn-pyimary MX-2\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n            <button className=\"btn btn-pyimary MX-2\" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-pyimary MX-2\" onClick={handleRevClick}>Reverse Text</button>\r\n\r\n        </div>\r\n        <div className=\"container my-3\">\r\n            <h3>Your text summary</h3>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Write something above to preview it here\"}</p>\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport React, { Component }  from 'react';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\n// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\nfunction App() {\n  return (\n    <>\n    \n      <div className=\"container my-3\">\n      {/* <BrowserRouter> */}\n      \n      <Navbar title=\"TextUtils\" about=\"About\" /> \n          {/* <Routes> */}\n            {/* <Route path=\"/\" element={<TextForm heading=\"Enter text to analyze\"></TextForm>}/> */}\n            <TextForm heading=\"Enter text to analyze\"></TextForm>\n            {/* <Route path=\"/about\" element={<About />} /> */}\n          {/* </Routes>\n        </BrowserRouter> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}